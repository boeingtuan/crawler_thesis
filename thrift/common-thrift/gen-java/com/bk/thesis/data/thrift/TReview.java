/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bk.thesis.data.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-07-20")
public class TReview implements org.apache.thrift.TBase<TReview, TReview._Fields>, java.io.Serializable, Cloneable, Comparable<TReview> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TReview");

  private static final org.apache.thrift.protocol.TField REVIEW_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField REVIEW_FIELD_DESC = new org.apache.thrift.protocol.TField("review", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("rating", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CREATED_DTTM_FIELD_DESC = new org.apache.thrift.protocol.TField("createdDttm", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField TAGS_FIELD_DESC = new org.apache.thrift.protocol.TField("tags", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField TOKENIZER_REVIEW_FIELD_DESC = new org.apache.thrift.protocol.TField("tokenizerReview", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField SEQUENCE_REVIEW_FIELD_DESC = new org.apache.thrift.protocol.TField("sequenceReview", org.apache.thrift.protocol.TType.LIST, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TReviewStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TReviewTupleSchemeFactory();

  public int reviewId; // required
  public java.lang.String review; // required
  public java.lang.String title; // required
  public int rating; // required
  public long createdDttm; // required
  public TTags tags; // required
  public java.util.List<java.lang.String> tokenizerReview; // required
  public java.util.List<java.lang.Integer> sequenceReview; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    REVIEW_ID((short)1, "reviewId"),
    REVIEW((short)2, "review"),
    TITLE((short)3, "title"),
    RATING((short)4, "rating"),
    CREATED_DTTM((short)5, "createdDttm"),
    TAGS((short)6, "tags"),
    TOKENIZER_REVIEW((short)7, "tokenizerReview"),
    SEQUENCE_REVIEW((short)8, "sequenceReview");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REVIEW_ID
          return REVIEW_ID;
        case 2: // REVIEW
          return REVIEW;
        case 3: // TITLE
          return TITLE;
        case 4: // RATING
          return RATING;
        case 5: // CREATED_DTTM
          return CREATED_DTTM;
        case 6: // TAGS
          return TAGS;
        case 7: // TOKENIZER_REVIEW
          return TOKENIZER_REVIEW;
        case 8: // SEQUENCE_REVIEW
          return SEQUENCE_REVIEW;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REVIEWID_ISSET_ID = 0;
  private static final int __RATING_ISSET_ID = 1;
  private static final int __CREATEDDTTM_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REVIEW_ID, new org.apache.thrift.meta_data.FieldMetaData("reviewId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REVIEW, new org.apache.thrift.meta_data.FieldMetaData("review", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATING, new org.apache.thrift.meta_data.FieldMetaData("rating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATED_DTTM, new org.apache.thrift.meta_data.FieldMetaData("createdDttm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TAGS, new org.apache.thrift.meta_data.FieldMetaData("tags", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TTags.class)));
    tmpMap.put(_Fields.TOKENIZER_REVIEW, new org.apache.thrift.meta_data.FieldMetaData("tokenizerReview", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.SEQUENCE_REVIEW, new org.apache.thrift.meta_data.FieldMetaData("sequenceReview", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TReview.class, metaDataMap);
  }

  public TReview() {
  }

  public TReview(
    int reviewId,
    java.lang.String review,
    java.lang.String title,
    int rating,
    long createdDttm,
    TTags tags,
    java.util.List<java.lang.String> tokenizerReview,
    java.util.List<java.lang.Integer> sequenceReview)
  {
    this();
    this.reviewId = reviewId;
    setReviewIdIsSet(true);
    this.review = review;
    this.title = title;
    this.rating = rating;
    setRatingIsSet(true);
    this.createdDttm = createdDttm;
    setCreatedDttmIsSet(true);
    this.tags = tags;
    this.tokenizerReview = tokenizerReview;
    this.sequenceReview = sequenceReview;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TReview(TReview other) {
    __isset_bitfield = other.__isset_bitfield;
    this.reviewId = other.reviewId;
    if (other.isSetReview()) {
      this.review = other.review;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    this.rating = other.rating;
    this.createdDttm = other.createdDttm;
    if (other.isSetTags()) {
      this.tags = new TTags(other.tags);
    }
    if (other.isSetTokenizerReview()) {
      java.util.List<java.lang.String> __this__tokenizerReview = new java.util.ArrayList<java.lang.String>(other.tokenizerReview);
      this.tokenizerReview = __this__tokenizerReview;
    }
    if (other.isSetSequenceReview()) {
      java.util.List<java.lang.Integer> __this__sequenceReview = new java.util.ArrayList<java.lang.Integer>(other.sequenceReview);
      this.sequenceReview = __this__sequenceReview;
    }
  }

  public TReview deepCopy() {
    return new TReview(this);
  }

  @Override
  public void clear() {
    setReviewIdIsSet(false);
    this.reviewId = 0;
    this.review = null;
    this.title = null;
    setRatingIsSet(false);
    this.rating = 0;
    setCreatedDttmIsSet(false);
    this.createdDttm = 0;
    this.tags = null;
    this.tokenizerReview = null;
    this.sequenceReview = null;
  }

  public int getReviewId() {
    return this.reviewId;
  }

  public TReview setReviewId(int reviewId) {
    this.reviewId = reviewId;
    setReviewIdIsSet(true);
    return this;
  }

  public void unsetReviewId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REVIEWID_ISSET_ID);
  }

  /** Returns true if field reviewId is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REVIEWID_ISSET_ID);
  }

  public void setReviewIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REVIEWID_ISSET_ID, value);
  }

  public java.lang.String getReview() {
    return this.review;
  }

  public TReview setReview(java.lang.String review) {
    this.review = review;
    return this;
  }

  public void unsetReview() {
    this.review = null;
  }

  /** Returns true if field review is set (has been assigned a value) and false otherwise */
  public boolean isSetReview() {
    return this.review != null;
  }

  public void setReviewIsSet(boolean value) {
    if (!value) {
      this.review = null;
    }
  }

  public java.lang.String getTitle() {
    return this.title;
  }

  public TReview setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public int getRating() {
    return this.rating;
  }

  public TReview setRating(int rating) {
    this.rating = rating;
    setRatingIsSet(true);
    return this;
  }

  public void unsetRating() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  /** Returns true if field rating is set (has been assigned a value) and false otherwise */
  public boolean isSetRating() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  public void setRatingIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RATING_ISSET_ID, value);
  }

  public long getCreatedDttm() {
    return this.createdDttm;
  }

  public TReview setCreatedDttm(long createdDttm) {
    this.createdDttm = createdDttm;
    setCreatedDttmIsSet(true);
    return this;
  }

  public void unsetCreatedDttm() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDDTTM_ISSET_ID);
  }

  /** Returns true if field createdDttm is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedDttm() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDDTTM_ISSET_ID);
  }

  public void setCreatedDttmIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDDTTM_ISSET_ID, value);
  }

  public TTags getTags() {
    return this.tags;
  }

  public TReview setTags(TTags tags) {
    this.tags = tags;
    return this;
  }

  public void unsetTags() {
    this.tags = null;
  }

  /** Returns true if field tags is set (has been assigned a value) and false otherwise */
  public boolean isSetTags() {
    return this.tags != null;
  }

  public void setTagsIsSet(boolean value) {
    if (!value) {
      this.tags = null;
    }
  }

  public int getTokenizerReviewSize() {
    return (this.tokenizerReview == null) ? 0 : this.tokenizerReview.size();
  }

  public java.util.Iterator<java.lang.String> getTokenizerReviewIterator() {
    return (this.tokenizerReview == null) ? null : this.tokenizerReview.iterator();
  }

  public void addToTokenizerReview(java.lang.String elem) {
    if (this.tokenizerReview == null) {
      this.tokenizerReview = new java.util.ArrayList<java.lang.String>();
    }
    this.tokenizerReview.add(elem);
  }

  public java.util.List<java.lang.String> getTokenizerReview() {
    return this.tokenizerReview;
  }

  public TReview setTokenizerReview(java.util.List<java.lang.String> tokenizerReview) {
    this.tokenizerReview = tokenizerReview;
    return this;
  }

  public void unsetTokenizerReview() {
    this.tokenizerReview = null;
  }

  /** Returns true if field tokenizerReview is set (has been assigned a value) and false otherwise */
  public boolean isSetTokenizerReview() {
    return this.tokenizerReview != null;
  }

  public void setTokenizerReviewIsSet(boolean value) {
    if (!value) {
      this.tokenizerReview = null;
    }
  }

  public int getSequenceReviewSize() {
    return (this.sequenceReview == null) ? 0 : this.sequenceReview.size();
  }

  public java.util.Iterator<java.lang.Integer> getSequenceReviewIterator() {
    return (this.sequenceReview == null) ? null : this.sequenceReview.iterator();
  }

  public void addToSequenceReview(int elem) {
    if (this.sequenceReview == null) {
      this.sequenceReview = new java.util.ArrayList<java.lang.Integer>();
    }
    this.sequenceReview.add(elem);
  }

  public java.util.List<java.lang.Integer> getSequenceReview() {
    return this.sequenceReview;
  }

  public TReview setSequenceReview(java.util.List<java.lang.Integer> sequenceReview) {
    this.sequenceReview = sequenceReview;
    return this;
  }

  public void unsetSequenceReview() {
    this.sequenceReview = null;
  }

  /** Returns true if field sequenceReview is set (has been assigned a value) and false otherwise */
  public boolean isSetSequenceReview() {
    return this.sequenceReview != null;
  }

  public void setSequenceReviewIsSet(boolean value) {
    if (!value) {
      this.sequenceReview = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case REVIEW_ID:
      if (value == null) {
        unsetReviewId();
      } else {
        setReviewId((java.lang.Integer)value);
      }
      break;

    case REVIEW:
      if (value == null) {
        unsetReview();
      } else {
        setReview((java.lang.String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case RATING:
      if (value == null) {
        unsetRating();
      } else {
        setRating((java.lang.Integer)value);
      }
      break;

    case CREATED_DTTM:
      if (value == null) {
        unsetCreatedDttm();
      } else {
        setCreatedDttm((java.lang.Long)value);
      }
      break;

    case TAGS:
      if (value == null) {
        unsetTags();
      } else {
        setTags((TTags)value);
      }
      break;

    case TOKENIZER_REVIEW:
      if (value == null) {
        unsetTokenizerReview();
      } else {
        setTokenizerReview((java.util.List<java.lang.String>)value);
      }
      break;

    case SEQUENCE_REVIEW:
      if (value == null) {
        unsetSequenceReview();
      } else {
        setSequenceReview((java.util.List<java.lang.Integer>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case REVIEW_ID:
      return getReviewId();

    case REVIEW:
      return getReview();

    case TITLE:
      return getTitle();

    case RATING:
      return getRating();

    case CREATED_DTTM:
      return getCreatedDttm();

    case TAGS:
      return getTags();

    case TOKENIZER_REVIEW:
      return getTokenizerReview();

    case SEQUENCE_REVIEW:
      return getSequenceReview();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case REVIEW_ID:
      return isSetReviewId();
    case REVIEW:
      return isSetReview();
    case TITLE:
      return isSetTitle();
    case RATING:
      return isSetRating();
    case CREATED_DTTM:
      return isSetCreatedDttm();
    case TAGS:
      return isSetTags();
    case TOKENIZER_REVIEW:
      return isSetTokenizerReview();
    case SEQUENCE_REVIEW:
      return isSetSequenceReview();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TReview)
      return this.equals((TReview)that);
    return false;
  }

  public boolean equals(TReview that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_reviewId = true;
    boolean that_present_reviewId = true;
    if (this_present_reviewId || that_present_reviewId) {
      if (!(this_present_reviewId && that_present_reviewId))
        return false;
      if (this.reviewId != that.reviewId)
        return false;
    }

    boolean this_present_review = true && this.isSetReview();
    boolean that_present_review = true && that.isSetReview();
    if (this_present_review || that_present_review) {
      if (!(this_present_review && that_present_review))
        return false;
      if (!this.review.equals(that.review))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_rating = true;
    boolean that_present_rating = true;
    if (this_present_rating || that_present_rating) {
      if (!(this_present_rating && that_present_rating))
        return false;
      if (this.rating != that.rating)
        return false;
    }

    boolean this_present_createdDttm = true;
    boolean that_present_createdDttm = true;
    if (this_present_createdDttm || that_present_createdDttm) {
      if (!(this_present_createdDttm && that_present_createdDttm))
        return false;
      if (this.createdDttm != that.createdDttm)
        return false;
    }

    boolean this_present_tags = true && this.isSetTags();
    boolean that_present_tags = true && that.isSetTags();
    if (this_present_tags || that_present_tags) {
      if (!(this_present_tags && that_present_tags))
        return false;
      if (!this.tags.equals(that.tags))
        return false;
    }

    boolean this_present_tokenizerReview = true && this.isSetTokenizerReview();
    boolean that_present_tokenizerReview = true && that.isSetTokenizerReview();
    if (this_present_tokenizerReview || that_present_tokenizerReview) {
      if (!(this_present_tokenizerReview && that_present_tokenizerReview))
        return false;
      if (!this.tokenizerReview.equals(that.tokenizerReview))
        return false;
    }

    boolean this_present_sequenceReview = true && this.isSetSequenceReview();
    boolean that_present_sequenceReview = true && that.isSetSequenceReview();
    if (this_present_sequenceReview || that_present_sequenceReview) {
      if (!(this_present_sequenceReview && that_present_sequenceReview))
        return false;
      if (!this.sequenceReview.equals(that.sequenceReview))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + reviewId;

    hashCode = hashCode * 8191 + ((isSetReview()) ? 131071 : 524287);
    if (isSetReview())
      hashCode = hashCode * 8191 + review.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + rating;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdDttm);

    hashCode = hashCode * 8191 + ((isSetTags()) ? 131071 : 524287);
    if (isSetTags())
      hashCode = hashCode * 8191 + tags.hashCode();

    hashCode = hashCode * 8191 + ((isSetTokenizerReview()) ? 131071 : 524287);
    if (isSetTokenizerReview())
      hashCode = hashCode * 8191 + tokenizerReview.hashCode();

    hashCode = hashCode * 8191 + ((isSetSequenceReview()) ? 131071 : 524287);
    if (isSetSequenceReview())
      hashCode = hashCode * 8191 + sequenceReview.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TReview other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetReviewId()).compareTo(other.isSetReviewId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewId, other.reviewId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReview()).compareTo(other.isSetReview());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReview()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.review, other.review);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRating()).compareTo(other.isSetRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rating, other.rating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedDttm()).compareTo(other.isSetCreatedDttm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedDttm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdDttm, other.createdDttm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTags()).compareTo(other.isSetTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTags()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tags, other.tags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTokenizerReview()).compareTo(other.isSetTokenizerReview());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTokenizerReview()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tokenizerReview, other.tokenizerReview);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSequenceReview()).compareTo(other.isSetSequenceReview());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSequenceReview()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sequenceReview, other.sequenceReview);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TReview(");
    boolean first = true;

    sb.append("reviewId:");
    sb.append(this.reviewId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("review:");
    if (this.review == null) {
      sb.append("null");
    } else {
      sb.append(this.review);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rating:");
    sb.append(this.rating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdDttm:");
    sb.append(this.createdDttm);
    first = false;
    if (!first) sb.append(", ");
    sb.append("tags:");
    if (this.tags == null) {
      sb.append("null");
    } else {
      sb.append(this.tags);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tokenizerReview:");
    if (this.tokenizerReview == null) {
      sb.append("null");
    } else {
      sb.append(this.tokenizerReview);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sequenceReview:");
    if (this.sequenceReview == null) {
      sb.append("null");
    } else {
      sb.append(this.sequenceReview);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (tags != null) {
      tags.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TReviewStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TReviewStandardScheme getScheme() {
      return new TReviewStandardScheme();
    }
  }

  private static class TReviewStandardScheme extends org.apache.thrift.scheme.StandardScheme<TReview> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TReview struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REVIEW_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reviewId = iprot.readI32();
              struct.setReviewIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // REVIEW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.review = iprot.readString();
              struct.setReviewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rating = iprot.readI32();
              struct.setRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATED_DTTM
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdDttm = iprot.readI64();
              struct.setCreatedDttmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TAGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.tags = new TTags();
              struct.tags.read(iprot);
              struct.setTagsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TOKENIZER_REVIEW
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.tokenizerReview = new java.util.ArrayList<java.lang.String>(_list16.size);
                java.lang.String _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = iprot.readString();
                  struct.tokenizerReview.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setTokenizerReviewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SEQUENCE_REVIEW
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.sequenceReview = new java.util.ArrayList<java.lang.Integer>(_list19.size);
                int _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = iprot.readI32();
                  struct.sequenceReview.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setSequenceReviewIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TReview struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(REVIEW_ID_FIELD_DESC);
      oprot.writeI32(struct.reviewId);
      oprot.writeFieldEnd();
      if (struct.review != null) {
        oprot.writeFieldBegin(REVIEW_FIELD_DESC);
        oprot.writeString(struct.review);
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RATING_FIELD_DESC);
      oprot.writeI32(struct.rating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATED_DTTM_FIELD_DESC);
      oprot.writeI64(struct.createdDttm);
      oprot.writeFieldEnd();
      if (struct.tags != null) {
        oprot.writeFieldBegin(TAGS_FIELD_DESC);
        struct.tags.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.tokenizerReview != null) {
        oprot.writeFieldBegin(TOKENIZER_REVIEW_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.tokenizerReview.size()));
          for (java.lang.String _iter22 : struct.tokenizerReview)
          {
            oprot.writeString(_iter22);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.sequenceReview != null) {
        oprot.writeFieldBegin(SEQUENCE_REVIEW_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.sequenceReview.size()));
          for (int _iter23 : struct.sequenceReview)
          {
            oprot.writeI32(_iter23);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TReviewTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TReviewTupleScheme getScheme() {
      return new TReviewTupleScheme();
    }
  }

  private static class TReviewTupleScheme extends org.apache.thrift.scheme.TupleScheme<TReview> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TReview struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetReviewId()) {
        optionals.set(0);
      }
      if (struct.isSetReview()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetRating()) {
        optionals.set(3);
      }
      if (struct.isSetCreatedDttm()) {
        optionals.set(4);
      }
      if (struct.isSetTags()) {
        optionals.set(5);
      }
      if (struct.isSetTokenizerReview()) {
        optionals.set(6);
      }
      if (struct.isSetSequenceReview()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetReviewId()) {
        oprot.writeI32(struct.reviewId);
      }
      if (struct.isSetReview()) {
        oprot.writeString(struct.review);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetRating()) {
        oprot.writeI32(struct.rating);
      }
      if (struct.isSetCreatedDttm()) {
        oprot.writeI64(struct.createdDttm);
      }
      if (struct.isSetTags()) {
        struct.tags.write(oprot);
      }
      if (struct.isSetTokenizerReview()) {
        {
          oprot.writeI32(struct.tokenizerReview.size());
          for (java.lang.String _iter24 : struct.tokenizerReview)
          {
            oprot.writeString(_iter24);
          }
        }
      }
      if (struct.isSetSequenceReview()) {
        {
          oprot.writeI32(struct.sequenceReview.size());
          for (int _iter25 : struct.sequenceReview)
          {
            oprot.writeI32(_iter25);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TReview struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.reviewId = iprot.readI32();
        struct.setReviewIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.review = iprot.readString();
        struct.setReviewIsSet(true);
      }
      if (incoming.get(2)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.rating = iprot.readI32();
        struct.setRatingIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createdDttm = iprot.readI64();
        struct.setCreatedDttmIsSet(true);
      }
      if (incoming.get(5)) {
        struct.tags = new TTags();
        struct.tags.read(iprot);
        struct.setTagsIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list26 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.tokenizerReview = new java.util.ArrayList<java.lang.String>(_list26.size);
          java.lang.String _elem27;
          for (int _i28 = 0; _i28 < _list26.size; ++_i28)
          {
            _elem27 = iprot.readString();
            struct.tokenizerReview.add(_elem27);
          }
        }
        struct.setTokenizerReviewIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.sequenceReview = new java.util.ArrayList<java.lang.Integer>(_list29.size);
          int _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = iprot.readI32();
            struct.sequenceReview.add(_elem30);
          }
        }
        struct.setSequenceReviewIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

